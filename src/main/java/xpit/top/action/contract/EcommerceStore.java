package xpit.top.action.contract;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple10;
import org.web3j.tuples.generated.Tuple3;
import org.web3j.tuples.generated.Tuple6;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class EcommerceStore extends Contract {
    public static final String BINARY = "608060405234801561001057600080fd5b5060008081905550614618806100276000396000f3006080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806328e3d190146100b45780634389754a146100f557806383560525146101625780639a3a7c691461024e578063a508b9551461027b578063b9db15b4146103de578063cc352db71461060e578063cd9596241461063b578063ce818ea9146106ff578063e80838631461077a578063f85f196e146107a7575b600080fd5b3480156100c057600080fd5b506100df60048036038101908080359060200190929190505050610860565b6040518082815260200191505060405180910390f35b34801561010157600080fd5b5061012060048036038101908080359060200190929190505050610c88565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561016e57600080fd5b5061018d60048036038101908080359060200190929190505050610cc5565b604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184151515158152602001838152602001828152602001965050505050505060405180910390f35b34801561025a57600080fd5b5061027960048036038101908080359060200190929190505050610de7565b005b34801561028757600080fd5b506103dc600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190929190803590602001909291908035906020019092919080359060200190929190505050610ed0565b005b3480156103ea57600080fd5b5061040960048036038101908080359060200190929190505050611230565b604051808b8152602001806020018060200180602001806020018a815260200189815260200188815260200187600281111561044157fe5b60ff16815260200186600181111561045557fe5b60ff16815260200185810385528e818151815260200191508051906020019080838360005b8381101561049557808201518184015260208101905061047a565b50505050905090810190601f1680156104c25780820380516001836020036101000a031916815260200191505b5085810384528d818151815260200191508051906020019080838360005b838110156104fb5780820151818401526020810190506104e0565b50505050905090810190601f1680156105285780820380516001836020036101000a031916815260200191505b5085810383528c818151815260200191508051906020019080838360005b83811015610561578082015181840152602081019050610546565b50505050905090810190601f16801561058e5780820380516001836020036101000a031916815260200191505b5085810382528b818151815260200191508051906020019080838360005b838110156105c75780820151818401526020810190506105ac565b50505050905090810190601f1680156105f45780820380516001836020036101000a031916815260200191505b509e50505050505050505050505050505060405180910390f35b34801561061a57600080fd5b50610639600480360381019080803590602001909291905050506116ba565b005b6106e560048036038101908080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506117a3565b604051808215151515815260200191505060405180910390f35b34801561070b57600080fd5b5061072a60048036038101908080359060200190929190505050611da6565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390f35b34801561078657600080fd5b506107a5600480360381019080803590602001909291905050506121e3565b005b3480156107b357600080fd5b5061085e60048036038101908080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050612cc4565b005b600061086a613575565b600260006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206101c0604051908101604052908160008201548152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561099d5780601f106109725761010080835404028352916020019161099d565b820191906000526020600020905b81548152906001019060200180831161098057829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a3f5780601f10610a1457610100808354040283529160200191610a3f565b820191906000526020600020905b815481529060010190602001808311610a2257829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ae15780601f10610ab657610100808354040283529160200191610ae1565b820191906000526020600020905b815481529060010190602001808311610ac457829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b835780601f10610b5857610100808354040283529160200191610b83565b820191906000526020600020905b815481529060010190602001808311610b6657829003601f168201915b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160098201548152602001600a8201548152602001600b8201548152602001600c820160009054906101000a900460ff166002811115610c3c57fe5b6002811115610c4757fe5b8152602001600c820160019054906101000a900460ff166001811115610c6957fe5b6001811115610c7457fe5b815250509050806101600151915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806000806000806004600088815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f3d259046040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160c060405180830381600087803b158015610d6557600080fd5b505af1158015610d79573d6000803e3d6000fd5b505050506040513d60c0811015610d8f57600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919050505095509550955095509550955091939550919395565b6004600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166358aad10b336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015610eb557600080fd5b505af1158015610ec9573d6000803e3d6000fd5b5050505050565b610ed8613575565b8385101515610f75576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001807f417574696f6e2073746172742074696d652073686f756c64206265206561726c81526020017f696572207468616e20656e642074696d6500000000000000000000000000000081525060400191505060405180910390fd5b600160008082825401925050819055506101c06040519081016040528060005481526020018a8152602001898152602001888152602001878152602001868152602001858152602001848152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000600281111561100357fe5b815260200183600181111561101457fe5b600181111561101f57fe5b815250905080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008054815260200190815260200160002060008201518160000155602082015181600101908051906020019061109c929190613611565b5060408201518160020190805190602001906110b9929190613611565b5060608201518160030190805190602001906110d6929190613611565b5060808201518160040190805190602001906110f3929190613611565b5060a0820151816005015560c0820151816006015560e082015181600701556101008201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610120820151816009015561014082015181600a015561016082015181600b015561018082015181600c0160006101000a81548160ff021916908360028111156111a057fe5b02179055506101a082015181600c0160016101000a81548160ff021916908360018111156111ca57fe5b021790555090505033600160008054815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050505050565b60006060806060806000806000806000611248613575565b60026000600160008f815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008d81526020019081526020016000206101c0604051908101604052908160008201548152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561137b5780601f106113505761010080835404028352916020019161137b565b820191906000526020600020905b81548152906001019060200180831161135e57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561141d5780601f106113f25761010080835404028352916020019161141d565b820191906000526020600020905b81548152906001019060200180831161140057829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114bf5780601f10611494576101008083540402835291602001916114bf565b820191906000526020600020905b8154815290600101906020018083116114a257829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115615780601f1061153657610100808354040283529160200191611561565b820191906000526020600020905b81548152906001019060200180831161154457829003601f168201915b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160098201548152602001600a8201548152602001600b8201548152602001600c820160009054906101000a900460ff16600281111561161a57fe5b600281111561162557fe5b8152602001600c820160019054906101000a900460ff16600181111561164757fe5b600181111561165257fe5b815250509050806000015181602001518260400151836060015184608001518560a001518660c001518760e00151886101800151896101a001518898508797508696508595509a509a509a509a509a509a509a509a509a509a50509193959799509193959799565b6004600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a97d1b10336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561178857600080fd5b505af115801561179c573d6000803e3d6000fd5b5050505050565b6000806000600260006001600089815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087815260200190815260200160002091508484604051602001808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561187657808201518184015260208101905061185b565b50505050905090810190601f1680156118a35780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156118dc5780820151818401526020810190506118c1565b50505050905090810190601f1680156119095780820380516001836020036101000a031916815260200191505b509450505050506040516020818303038152906040526040518082805190602001908083835b602083101515611954578051825260208201915060208101905060208303925061192f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020905081600501544210151515611a25576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001807f43757272656e742074696d652073686f756c64206265206c617465722074686181526020017f6e2061756374696f6e2073746172742074696d6500000000000000000000000081525060400191505060405180910390fd5b81600601544211151515611ac7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001807f43757272656e742074696d652073686f756c64206265206561726c696572207481526020017f68616e2061756374696f6e20656e642074696d6500000000000000000000000081525060400191505060405180910390fd5b816007015434111515611b68576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f56616c75652073686f756c64206265206c6172676572207468616e207374617281526020017f742070726963650000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600082600d0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000836000191660001916815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611c73576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4269646465722073686f756c64206265206e756c6c000000000000000000000081525060200191505060405180910390fd5b6080604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018781526020013481526020016000151581525082600d0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000836000191660001916815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908315150217905550905050600182600b01600082825401925050819055506001925050509392505050565b6000806000611db3613575565b600260006001600088815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008681526020019081526020016000206101c0604051908101604052908160008201548152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ee65780601f10611ebb57610100808354040283529160200191611ee6565b820191906000526020600020905b815481529060010190602001808311611ec957829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f885780601f10611f5d57610100808354040283529160200191611f88565b820191906000526020600020905b815481529060010190602001808311611f6b57829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561202a5780601f10611fff5761010080835404028352916020019161202a565b820191906000526020600020905b81548152906001019060200180831161200d57829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120cc5780601f106120a1576101008083540402835291602001916120cc565b820191906000526020600020905b8154815290600101906020018083116120af57829003601f168201915b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160098201548152602001600a8201548152602001600b8201548152602001600c820160009054906101000a900460ff16600281111561218557fe5b600281111561219057fe5b8152602001600c820160019054906101000a900460ff1660018111156121b257fe5b60018111156121bd57fe5b815250509050806101000151816101200151826101400151935093509350509193909250565b6121eb613575565b600080600260006001600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206101c0604051908101604052908160008201548152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123215780601f106122f657610100808354040283529160200191612321565b820191906000526020600020905b81548152906001019060200180831161230457829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123c35780601f10612398576101008083540402835291602001916123c3565b820191906000526020600020905b8154815290600101906020018083116123a657829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124655780601f1061243a57610100808354040283529160200191612465565b820191906000526020600020905b81548152906001019060200180831161244857829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125075780601f106124dc57610100808354040283529160200191612507565b820191906000526020600020905b8154815290600101906020018083116124ea57829003601f168201915b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160098201548152602001600a8201548152602001600b8201548152602001600c820160009054906101000a900460ff1660028111156125c057fe5b60028111156125cb57fe5b8152602001600c820160019054906101000a900460ff1660018111156125ed57fe5b60018111156125f857fe5b8152505092508260c001514211151561269f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001807f43757272656e742074696d652073686f756c64206265206c617465722074686181526020017f6e2061756374696f6e20656e642074696d65000000000000000000000000000081525060400191505060405180910390fd5b600060028111156126ac57fe5b83610180015160028111156126bd57fe5b141515612732576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f50726f64756374207374617475732073686f756c64206265206f70656e00000081525060200191505060405180910390fd5b6001600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151515612809576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f43616c6c65722073686f756c64206e6f742062652073656c6c6572000000000081525060200191505060405180910390fd5b82610100015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515156128b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f43616c6c65722073686f756c64206e6f7420626520627579657200000000000081525060200191505060405180910390fd5b600083610100015173ffffffffffffffffffffffffffffffffffffffff1614156128ff57600283610180019060028111156128e957fe5b908160028111156128f657fe5b81525050612ade565b826101400151848461010001516001600088815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633612949613691565b808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019450505050506040518091039082f080158015612a07573d6000803e3d6000fd5b5090509150816004600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018361018001906002811115612a7157fe5b90816002811115612a7e57fe5b8152505082610140015183610120015103905082610100015173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015612adc573d6000803e3d6000fd5b505b82600260006001600088815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020600082015181600001556020820151816001019080519060200190612b88929190613611565b506040820151816002019080519060200190612ba5929190613611565b506060820151816003019080519060200190612bc2929190613611565b506080820151816004019080519060200190612bdf929190613611565b5060a0820151816005015560c0820151816006015560e082015181600701556101008201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610120820151816009015561014082015181600a015561016082015181600b015561018082015181600c0160006101000a81548160ff02191690836002811115612c8c57fe5b02179055506101a082015181600c0160016101000a81548160ff02191690836001811115612cb657fe5b021790555090505050505050565b600080612ccf6136a1565b60008060026000600160008b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000898152602001908152602001600020945084600601544210151515612d6a57600080fd5b8686604051602001808060200180602001838103835285818151815260200191508051906020019080838360005b83811015612db3578082015181840152602081019050612d98565b50505050905090810190601f168015612de05780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015612e19578082015181840152602081019050612dfe565b50505050905090810190601f168015612e465780820380516001836020036101000a031916815260200191505b509450505050506040516020818303038152906040526040518082805190602001908083835b602083101515612e915780518252602082019150602081019050602083039250612e6c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020935084600d0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008560001916600019168152602001908152602001600020608060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff16151515158152505092506000836000015173ffffffffffffffffffffffffffffffffffffffff1611151561303f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4269646465722073686f756c642065786973740000000000000000000000000081525060200191505060405180910390fd5b60001515836060015115151415156130bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4269642068736f756c64206e6f742062652072657665616c656400000000000081525060200191505060405180910390fd5b6130c88761336b565b905080836040015110156130e2578260400151915061329a565b60008560080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561318c57338560080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808560090181905550846007015485600a0181905550808360400151039150613299565b846009015481111561326e57846009015485600a01819055508460080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc86600901549081150290604051600060405180830381858888f19350505050158015613213573d6000803e3d6000fd5b50808560090181905550338560080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808360400151039150613298565b84600a015481111561328f578085600a018190555082604001519150613297565b826040015191505b5b5b5b600185600d0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000866000191660001916815260200190815260200160002060030160006101000a81548160ff0219169083151502179055506000821115613361573373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561335f573d6000803e3d6000fd5b505b5050505050505050565b6000606060008084925060009150600090505b825181101561356a5760307f01000000000000000000000000000000000000000000000000000000000000000283828151811015156133b957fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916101580156134d1575060397f010000000000000000000000000000000000000000000000000000000000000002838281518110151561346157fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b1561355d57603083828151811015156134e657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900403600a83020191505b808060010191505061337e565b819350505050919050565b6101c0604051908101604052806000815260200160608152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600060028111156135f957fe5b81526020016000600181111561360b57fe5b81525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061365257805160ff1916838001178555613680565b82800160010185558215613680579182015b8281111561367f578251825591602001919060010190613664565b5b50905061368d91906136e2565b5090565b604051610ee58061370883390190565b608060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000151581525090565b61370491905b808211156137005760008160009055506001016136e8565b5090565b9056006080604052604051608080610ee5833981018060405281019080805190602001909291908051906020019092919080519060200190929190805190602001909291905050508360008190555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346004819055506000600560006101000a81548160ff0219169083151502179055507f7527d0b8d16913563c5afb8fa2dc5b6257355ff7dfbefbdcfc1cf812a0f97c5e84848484604051808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390a150505050610ccf806102166000396000f3006080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806308551a53146100b45780630bda4dbf1461010b57806358aad10b146101365780637150d8ae14610179578063a97d1b10146101d0578063aa8c217c14610213578063b8d08db21461023e578063c5ce391114610269578063d1a52e3014610294578063f3d25904146102c3578063fe25e00a14610399575b600080fd5b3480156100c057600080fd5b506100c96103f0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561011757600080fd5b50610120610416565b6040518082815260200191505060405180910390f35b34801561014257600080fd5b50610177600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061041c565b005b34801561018557600080fd5b5061018e6107d9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101dc57600080fd5b50610211600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107ff565b005b34801561021f57600080fd5b50610228610bbc565b6040518082815260200191505060405180910390f35b34801561024a57600080fd5b50610253610bc2565b6040518082815260200191505060405180910390f35b34801561027557600080fd5b5061027e610bc8565b6040518082815260200191505060405180910390f35b3480156102a057600080fd5b506102a9610bce565b604051808215151515815260200191505060405180910390f35b3480156102cf57600080fd5b506102d8610be1565b604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184151515158152602001838152602001828152602001965050505050505060405180910390f35b3480156103a557600080fd5b506103ae610c7d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60095481565b600560009054906101000a900460ff1615151561043857600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806104e15750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b806105395750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b8015610596575060011515600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514155b156106ab576001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016007600082825401925050819055507fe31e37941fee7dca6bb1597da71841499d8cd0dfc5553e0889f6d1ca6038ce966000548260405180838152602001806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260078152602001807f72656c6561736500000000000000000000000000000000000000000000000000815250602001935050505060405180910390a15b600260075414156107d657600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050158015610720573d6000803e3d6000fd5b506001600560006101000a81548160ff0219169083151502179055507fdde1058856b8611b1f49ef2ebaef10c0441e48e8a6cbbec1ebdcbfb1862b57b4600054600454600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a15b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900460ff1615151561081b57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806108c45750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b8061091c5750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b8015610979575060011515600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514155b15610a8e576001600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016009600082825401925050819055507fe31e37941fee7dca6bb1597da71841499d8cd0dfc5553e0889f6d1ca6038ce966000548260405180838152602001806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260068152602001807f726566756e640000000000000000000000000000000000000000000000000000815250602001935050505060405180910390a15b60026009541415610bb957600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050158015610b03573d6000803e3d6000fd5b506001600560006101000a81548160ff0219169083151502179055507fdde1058856b8611b1f49ef2ebaef10c0441e48e8a6cbbec1ebdcbfb1862b57b4600054600454600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a15b50565b60045481565b60075481565b60005481565b600560009054906101000a900460ff1681565b600080600080600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900460ff16600754600954955095509550955095509550909192939495565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820c0d70a2568d80a3384b53d3e7e84abdc5c8eb9426f0ccf19b19da43cb623590b0029a165627a7a72305820f9251bd0d6b1d7618593f0dbfd2369c94cc41ed1a2de8442a7be1f4f35eb82800029";

    public static final String FUNC_ADDPRODUCTTOSTORE = "addProductToStore";

    public static final String FUNC_BID = "bid";

    public static final String FUNC_FINALIZEAUCTION = "finalizeAuction";

    public static final String FUNC_REFUNDAMOUNTTOBUYER = "refundAmountToBuyer";

    public static final String FUNC_RELEASEAMOUNTTOSELLER = "releaseAmountToSeller";

    public static final String FUNC_REVEALBID = "revealBid";

    public static final String FUNC_ESCROWADDRESSFORPRODUCT = "escrowAddressForProduct";

    public static final String FUNC_ESCROWINFO = "escrowInfo";

    public static final String FUNC_GETPRODUCT = "getProduct";

    public static final String FUNC_HIGHESTBIDDERINFO = "highestBidderInfo";

    public static final String FUNC_TOTALBIDS = "totalBids";

    @Deprecated
    protected EcommerceStore(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected EcommerceStore(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected EcommerceStore(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected EcommerceStore(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<TransactionReceipt> addProductToStore(String _name, String _category, String _imageLink, String _descLink, BigInteger _auctionStartTime, BigInteger _auctionEndTime, BigInteger _startPrice, BigInteger _productCondition) {
        final Function function = new Function(
                FUNC_ADDPRODUCTTOSTORE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_name), 
                new org.web3j.abi.datatypes.Utf8String(_category), 
                new org.web3j.abi.datatypes.Utf8String(_imageLink), 
                new org.web3j.abi.datatypes.Utf8String(_descLink), 
                new org.web3j.abi.datatypes.generated.Uint256(_auctionStartTime), 
                new org.web3j.abi.datatypes.generated.Uint256(_auctionEndTime), 
                new org.web3j.abi.datatypes.generated.Uint256(_startPrice), 
                new org.web3j.abi.datatypes.generated.Uint256(_productCondition)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> bid(BigInteger _productId, String _amount, String _secret, BigInteger weiValue) {
        final Function function = new Function(
                FUNC_BID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_productId), 
                new org.web3j.abi.datatypes.Utf8String(_amount), 
                new org.web3j.abi.datatypes.Utf8String(_secret)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    public RemoteFunctionCall<TransactionReceipt> finalizeAuction(BigInteger _productId) {
        final Function function = new Function(
                FUNC_FINALIZEAUCTION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_productId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> refundAmountToBuyer(BigInteger _productId) {
        final Function function = new Function(
                FUNC_REFUNDAMOUNTTOBUYER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_productId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> releaseAmountToSeller(BigInteger _productId) {
        final Function function = new Function(
                FUNC_RELEASEAMOUNTTOSELLER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_productId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> revealBid(BigInteger _productId, String _amount, String _secret) {
        final Function function = new Function(
                FUNC_REVEALBID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_productId), 
                new org.web3j.abi.datatypes.Utf8String(_amount), 
                new org.web3j.abi.datatypes.Utf8String(_secret)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> escrowAddressForProduct(BigInteger _productId) {
        final Function function = new Function(FUNC_ESCROWADDRESSFORPRODUCT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_productId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple6<String, String, String, Boolean, BigInteger, BigInteger>> escrowInfo(BigInteger _productId) {
        final Function function = new Function(FUNC_ESCROWINFO, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_productId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Bool>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple6<String, String, String, Boolean, BigInteger, BigInteger>>(function,
                new Callable<Tuple6<String, String, String, Boolean, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple6<String, String, String, Boolean, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple6<String, String, String, Boolean, BigInteger, BigInteger>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (Boolean) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple10<BigInteger, String, String, String, String, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>> getProduct(BigInteger _productId) {
        final Function function = new Function(FUNC_GETPRODUCT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_productId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint8>() {}, new TypeReference<Uint8>() {}));
        return new RemoteFunctionCall<Tuple10<BigInteger, String, String, String, String, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>>(function,
                new Callable<Tuple10<BigInteger, String, String, String, String, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple10<BigInteger, String, String, String, String, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple10<BigInteger, String, String, String, String, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (String) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue(), 
                                (BigInteger) results.get(6).getValue(), 
                                (BigInteger) results.get(7).getValue(), 
                                (BigInteger) results.get(8).getValue(), 
                                (BigInteger) results.get(9).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple3<String, BigInteger, BigInteger>> highestBidderInfo(BigInteger _productId) {
        final Function function = new Function(FUNC_HIGHESTBIDDERINFO, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_productId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple3<String, BigInteger, BigInteger>>(function,
                new Callable<Tuple3<String, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple3<String, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<String, BigInteger, BigInteger>(
                                (String) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue());
                    }
                });
    }

    public RemoteFunctionCall<BigInteger> totalBids(BigInteger _productId) {
        final Function function = new Function(FUNC_TOTALBIDS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_productId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    @Deprecated
    public static EcommerceStore load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new EcommerceStore(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static EcommerceStore load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new EcommerceStore(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static EcommerceStore load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new EcommerceStore(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static EcommerceStore load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new EcommerceStore(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<EcommerceStore> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(EcommerceStore.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<EcommerceStore> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(EcommerceStore.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<EcommerceStore> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(EcommerceStore.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<EcommerceStore> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(EcommerceStore.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }
}
